# Project Brain - –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

## üéØ –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏—è–º–∏ —Å RAG –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –∫–æ–¥–∞, AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.

## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞
```
backend/
  api/           # FastAPI endpoints (routes, main.py)
  rag/           # RAG engine (ChromaDB, embeddings)
  llm/           # Ollama client (–ø—Ä–æ–º–ø—Ç—ã, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
  indexers/      # Python/Markdown –ø–∞—Ä—Å–µ—Ä—ã
  generators/    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, —ç–∫—Å–ø–æ—Ä—Ç
  analyzers/     # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
frontend/        # HTML/JS —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
config/          # projects.yaml - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
```

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- **Backend**: FastAPI + async/await
- **RAG**: ChromaDB 0.5.x + sentence-transformers
- **LLM**: Ollama (qwen2.5:14b-instruct)
- **–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è**: AST –ø–∞—Ä—Å–∏–Ω–≥ (tree-sitter –ø–æ–¥–æ–±–Ω–æ)
- **Docker**: docker-compose.local.yml

## üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ó–ê–ü–†–ï–¢–´

### 1. –ù–ï —Å–æ–∑–¥–∞–≤–∞—Ç—å helper —Å–∫—Ä–∏–ø—Ç—ã
- ‚ùå –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º
- ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å root cause

### 2. –ù–ï –≥–∞–ª–ª—é—Ü–∏–Ω–∏—Ä–æ–≤–∞—Ç—å
- ‚ùå –ù–µ –≤—ã–¥—É–º—ã–≤–∞—Ç—å —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ø—Ä–æ–µ–∫—Ç–µ
- ‚ùå –ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–æ–¥ –∏–∑ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥—É–ª–µ–π
- ‚úÖ –í–°–ï–ì–î–ê –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ read_file/grep –ø–µ—Ä–µ–¥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏

### 3. –ù–ï –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏–∏
- ‚ùå –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å `project_brain` –∫–æ–ª–ª–µ–∫—Ü–∏—é (—Å—Ç–∞—Ä–∞—è, —É–¥–∞–ª–∏—Ç—å!)
- ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `kb_{project_name}` –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
- ‚úÖ –í—ã–∑—ã–≤–∞—Ç—å `get_collection(project)` –ø–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π —Å ChromaDB

### 4. –ù–ï —Ö–∞—Ä–¥–∫–æ–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã
- ‚ùå `project: str = "staffprobot"` –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö
- ‚úÖ –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å `project_name` –≤ `generate_response()`
- ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤

## ‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê

### RAG Engine (`backend/rag/engine.py`)
```python
# –í–°–ï–ì–î–ê –ø–æ–ª—É—á–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
collection = self.get_collection(project)

# –ù–ò–ö–û–ì–î–ê –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å self.collection –Ω–∞–ø—Ä—è–º—É—é
# ‚ùå self.collection.query(...)
# ‚úÖ collection = self.get_collection(project); collection.query(...)
```

### LLM Client (`backend/llm/ollama_client.py`)
```python
# –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å project_name
await ollama.generate_response(
    query=query,
    context=context,
    project_name=project  # ‚Üê –ö–†–ò–¢–ò–ß–ù–û!
)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ (–ù–ï –ú–ï–ù–Ø–¢–¨ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è):
temperature=0.3      # –ú–µ–Ω—å—à–µ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π
repeat_penalty=1.2   # –ë–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
num_ctx=4096        # –ë–æ–ª—å—à–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
timeout=90          # –î–ª—è 14B –º–æ–¥–µ–ª–∏
```

### –ü—Ä–æ–º–ø—Ç—ã - –∞–Ω—Ç–∏-–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏—è
```python
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –¢–û–õ–¨–ö–û –∫ –ø—Ä–æ–µ–∫—Ç—É {project_name}
- –ù–ò–ö–û–ì–î–ê –Ω–µ —É–ø–æ–º–∏–Ω–∞–π –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
- –ù–ò–ö–û–ì–î–ê –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π —Ñ–∞–π–ª—ã
- –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ - —Å–∫–∞–∂–∏ "–¢–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç"
"""
```

### Intent Detection
```python
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–Ω—Ç—ã:
'overview'   ‚Üí doc_type: 'documentation' (README)
'how_to'     ‚Üí doc_type: 'route', 'handler'
'structure'  ‚Üí doc_type: 'model', 'schema'
'api'        ‚Üí doc_type: 'route', 'api'
```

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
```python
context_order = [
    'documentation',  # –ü–ï–†–í–´–ô! (README, –æ–ø–∏—Å–∞–Ω–∏—è)
    'route', 'handler', 'api',
    'service', 'form',
    'model', 'schema',
    'other'
]
```

## üìù –°—Ç–∏–ª—å –∫–æ–¥–∞

### Python
- **Type hints**: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
- **Async/await**: –¥–ª—è I/O –æ–ø–µ—Ä–∞—Ü–∏–π (ChromaDB, Ollama)
- **Logging**: `logger.info/error`, –ù–ï print()
- **Docstrings**: –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤

### –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ
- `snake_case` –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- `PascalCase` –¥–ª—è –∫–ª–∞—Å—Å–æ–≤
- `UPPER_CASE` –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç
- –ü—Ä–µ—Ñ–∏–∫—Å `_` –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
```python
try:
    result = await operation()
except SpecificError as e:
    logger.error(f"–û–ø–∏—Å–∞–Ω–∏–µ: {e}", exc_info=True)
    raise  # –ò–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
```

## üîÑ Workflow

### –ü–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
1. `grep` –∏–ª–∏ `codebase_search` –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞
2. `read_file` –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
3. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ ‚Üí –¥–æ–∂–¥–∞—Ç—å—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

### –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å linter errors
2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ API
4. –ö–æ–º–º–∏—Ç —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º

### Docker
```bash
# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ API
docker compose -f docker-compose.local.yml restart api

# –õ–æ–≥–∏
docker logs project-brain-api --tail 50

# –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è
curl -X POST http://localhost:8003/api/index/{project_name}
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- URL: http://192.168.2.107:8003/chat
- –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç, –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –≤—Ä–µ–º—è

### API
```bash
curl -X POST http://localhost:8003/api/query \
  -H "Content-Type: application/json" \
  -d '{"query": "–≤–æ–ø—Ä–æ—Å?", "project": "staffprobot"}'
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
```bash
docker exec project-brain-api python3 -c \
  "import chromadb; client = chromadb.HttpClient(host='chromadb', port=8000); \
   [print(f'{c.name}: {c.count()} docs') for c in client.list_collections()]"
```

## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

### –û–±–Ω–æ–≤–ª—è—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
- `README.md` - –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- `doc/project-status.md` - –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- `FINAL_STATUS.md` - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
- `IMPROVEMENTS_LOG.md` - –ª–æ–≥ —É–ª—É—á—à–µ–Ω–∏–π

### –ö–æ–º–º–∏—Ç—ã
- –§–æ—Ä–º–∞—Ç: `"–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"`
- –ü—Ä–∏–º–µ—Ä—ã:
  - ‚úÖ "–†–∞–∑–¥–µ–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ChromaDB"
  - ‚úÖ "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö"
  - ‚ùå "fix bug" (—Å–ª–∏—à–∫–æ–º –æ–±—â–µ–µ)

## üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞

1. **–¢–æ—á–Ω–æ—Å—Ç—å** > —Å–∫–æ—Ä–æ—Å—Ç—å (–ª—É—á—à–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ)
2. **–ü—Ä–æ—Å—Ç–æ—Ç–∞** > clever code (KISS –ø—Ä–∏–Ω—Ü–∏–ø)
3. **–Ø–≤–Ω–æ—Å—Ç—å** > –Ω–µ—è–≤–Ω–æ—Å—Ç—å (explicit is better than implicit)
4. **–¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å** > –∫—Ä–∞—Å–æ—Ç–∞ –∫–æ–¥–∞

## üí° –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

### –ú—É–ª—å—Ç–∏–ø—Ä–æ–µ–∫—Ç–Ω–æ—Å—Ç—å
- –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ `kb_{project}`
- –ù–ï —Å–º–µ—à–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ–∂–¥—É –ø—Ä–æ–µ–∫—Ç–∞–º–∏
- –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å `project` –≤–æ –≤—Å–µ –º–µ—Ç–æ–¥—ã RAG

### Ollama + GPU
- –ú–æ–¥–µ–ª—å –Ω–∞ —Ö–æ—Å—Ç–µ (–Ω–µ –≤ Docker): `192.168.2.107:11434`
- –ú–æ–¥–µ–ª—å: `qwen2.5:14b-instruct` (8.9GB)
- –ù–ï –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –Ω–∞ 32B –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è (—Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω–æ)

### ChromaDB 0.5.x
- –ù–æ–≤—ã–π API: `HttpClient`, –ù–ï —Å—Ç–∞—Ä—ã–π `Client`
- –ö–æ–ª–ª–µ–∫—Ü–∏–∏: `get_or_create_collection()`
- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID: `f"{project}_{chunk_id}"`

## üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏

- Ollama –º–æ–¥–µ–ª–∏: https://ollama.com/library
- ChromaDB docs: https://docs.trychroma.com/
- sentence-transformers: https://www.sbert.net/

---

**–ü–æ–º–Ω–∏**: Quality > Speed. –õ—É—á—à–µ —Å–ø—Ä–æ—Å–∏—Ç—å, —á–µ–º –≤—ã–¥—É–º–∞—Ç—å!

